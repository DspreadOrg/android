name: Android CI/CD

on:
  push:
    branches:
      - master  # 触发 CI/CD 的分支
  pull_request:
    branches:
      - master  # 监听到 PR 到 main 分支时触发 CI/CD

jobs:
  lint:
    runs-on: ubuntu-latest  # 使用 Ubuntu 作为运行环境

    steps:
      - name: Check out repository
        uses: actions/checkout@v2  # 检出当前仓库代码

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install commitlint
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional

      - name: Run commitlint
        run: |
          if [ "${GITHUB_SHA}" = "0000000000000000000000000000000000000000" ]; then
            echo "commitlint from HEAD^"
            npx commitlint -x @commitlint/config-conventional -f HEAD^
          else
            echo "commitlint from ${GITHUB_SHA}"
            npx commitlint -x @commitlint/config-conventional -f "${GITHUB_SHA}"
          fi

  build:
    runs-on: ubuntu-latest  # 使用 Ubuntu 作为运行环境

    steps:
      - name: Check out repository
        uses: actions/checkout@v2  # 检出当前仓库代码

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Set up Android SDK
        uses: reactivecircus/android-sdk-installer@v1
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build the release APK
        run: |
          export GRADLE_USER_HOME=$(pwd)/.gradle
          ./gradlew assembleRelease --stacktrace \
            -Pandroid.injected.signing.store.file=$(pwd)/app.keystore \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD

      - name: Get version info from build.gradle
        run: |
          VERSION=$(grep -E "versionName" pos_android_studio_app/build.gradle | cut -d "\"" -f2)
          VERSIONCODE=$(grep -E "versionCode" pos_android_studio_app/build.gradle)
          echo "Version: $VERSION, VersionCode: $VERSIONCODE"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSIONCODE=$VERSIONCODE" >> $GITHUB_ENV

  test:
    runs-on: ubuntu-latest  # 使用 Ubuntu 作为运行环境

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Run tests
        run: ./gradlew test

  release:
    runs-on: ubuntu-latest
    needs: [build]  # 依赖于 build 作业的成功

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Semantic Release and dependencies
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/gitlab @semantic-release/changelog conventional-changelog-conventionalcommits --force

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        run: npx semantic-release

  deploy:
    runs-on: ubuntu-latest  # 使用 Ubuntu 作为运行环境
    needs: [build]  # 部署依赖于构建作业成功

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Deploy to the server or another location
        run: |
          echo "Deploying APK or other artifacts"
          # 可以根据需要替换为实际的部署步骤，例如上传到服务器或云平台等

