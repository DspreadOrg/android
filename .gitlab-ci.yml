# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

before_script:
- cd pos_android_studio_demo/
- export GRADLE_USER_HOME=$(pwd)/.gradle
- chmod +x ./gradlew

# cache:
#   key: ${CI_PROJECT_ID}
#   paths:
#   - .gradle/

stages:
- lint
- build
- test
- release

#lintDebug:
#  stage: build
#  script:
#    - cd pos_android_studio_demo/
#    - ./gradlew -Pci --console=plain :pos_android_studio_app:lintDebug -PbuildDir=lint --stacktrace

#assembleDebug:
#  stage: build
#  script:
#    - ls
#    - cd pos_android_studio_demo/
#    - ./gradlew assembleDebug
    

include: 
  - template: Secret-Detection.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: /Jobs/License-Scanning.gitlab-ci.yml

assembleRelease:
  stage: build
  image: jangrewe/gitlab-ci-android
  script:
  - echo $KEYSTORE_FILE | base64 -d > my.keystore
  - ./gradlew assembleRelease --stacktrace
    -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
    -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
    -Pandroid.injected.signing.key.alias=$KEY_ALIAS
    -Pandroid.injected.signing.key.password=$KEY_PASSWORD

  - export VERSION=$(grep -E "versionName" pos_android_studio_app/build.gradle | cut -d "\"" -f2)
  - export VERSIONCODE=$(grep -E "versionCode" pos_android_studio_app/build.gradle)

  #- echo $VERSION
  
  - ls 
  - cd pos_android_studio_app
  - ls
  - cd build
  - ls
  - cd outputs
  - ls
  - cd apk
  - ls
  - cd release
  - ls 
  #- echo "{$CI_COMMIT_MESSAGE}" > commit.txt
  #- ls
  #- echo "{$CI_COMMIT_MESSAGE}" > pos_android_studio_app/build/outputs/apk/release/commit.txt 
  #- ls
  #- echo "{VersionName:$VERSION,VersionCode:$VERSIONCODE,ModifyContent:$CI_COMMIT_MESSAGE}" > commit.txt
  - echo "{" > commit.json
  - echo '"Code":0,' >> commit.json
  - echo '"UpdateStatus":2,'>> commit.json
  - echo '"VersionName"':"$VERSION," >> commit.json
  - echo '"VersionCode"':"\"$VERSIONCODE"\", >> commit.json
  - echo '"ApkSize":4096,'>> commit.json
  - echo '"ModifyContent"':"\"$CI_COMMIT_MESSAGE"\", >> commit.json
  - echo '"DownloadUrl"':'"https://gitlab.com/api/v4/projects/4128550/jobs/artifacts/master/raw/pos_android_studio_demo/pos_android_studio_app/build/outputs/apk/release/pos_android_studio_app-release.apk?job=assembleRelease"' >> commit.json
  - echo "}" >> commit.json

  artifacts:
    paths:
    - pos_android_studio_demo/pos_android_studio_app/build/outputs/apk/release/*
    #- pos_android_studio_demo/pos_android_studio_app/build/outputs/apk/release/commit.txt 
    #pos_android_studio_app-release.apk

  only:
    - develop  

commitlint:
  stage: lint
  image: node:lts
  script: 
  - npm install -g @commitlint/cli @commitlint/config-conventional
  dependencies: []
  tags:
    - docker 
  
  only:
    - develop  
     
sast:
  stage: test
  script: 
    - echo "Running tests..."
  variables:
     CI_DEBUG_TRACE: "true"
  
  only:
    - develop  
    

release:
  stage: release
  image: node:lts
  script:
     - npm install -g semantic-release @semantic-release/gitlab @semantic-release/changelog conventional-changelog-conventionalcommits
     - npx semantic-release
  dependencies: []
  # 仅在中央仓库的分支发生提交时才触发 release 流程
  only:
    - develop_new_demo
  # 指定注册的runner名称
  tags:
    - docker

